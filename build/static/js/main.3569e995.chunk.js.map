{"version":3,"sources":["components/GoogleCalendar.js","App.js","index.js"],"names":["API_KEY","GoogleCalendar","useState","events","setEvents","useEffect","script","document","createElement","async","defer","src","body","appendChild","addEventListener","window","gapi","handleClientLoad","openSignInPopup","auth2","authorize","client_id","scope","res","console","log","client","access_token","localStorage","setItem","load","listUpcomingEvents","initClient","getItem","fetch","headers","Authorization","then","status","json","removeItem","data","items","formatEvents","calendar","list","calendarId","showDeleted","singleEvents","response","result","length","map","item","title","summary","start","dateTime","date","end","onClick","Date","toISOString","method","JSON","stringify","plugins","dayGridPlugin","initialView","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"oQAMMA,EAAU,0CA4KDC,EArKQ,WAAO,IAAD,EACCC,mBAAS,MADV,mBACpBC,EADoB,KACZC,EADY,KAG3BC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAQ,EACfH,EAAOI,OAAQ,EACfJ,EAAOK,IAAM,oCAEbJ,SAASK,KAAKC,YAAYP,GAE1BA,EAAOQ,iBAAiB,QAAQ,WAC1BC,OAAOC,MAAMC,SAElB,IAEH,IAAMC,EAAkB,WACtBH,OAAOC,KAAKG,MAAMC,UAChB,CAAEC,UA1BN,2EA0B4BC,MApB5B,8LAqBI,SAACC,GACCC,QAAQC,IAAIF,GACRA,IACFC,QAAQC,IAAIV,OAAOC,KAAKU,OAAQH,GAE5BA,EAAII,cACNC,aAAaC,QAAQ,eAAgBN,EAAII,cAU3CZ,OAAOC,KAAKU,OAAOI,KAAK,WAAY,KAAMC,QAS5Cd,EAAmB,WACvBF,OAAOC,KAAKc,KAAK,eAAgBE,IAO7BA,EAAa,WACZJ,aAAaK,QAAQ,gBAGxBC,MAAM,uEAAD,OACoElC,EADpE,wCAEH,CACEmC,QAAS,CACPC,cAAc,UAAD,OAAYR,aAAaK,QAAQ,oBAIjDI,MAAK,SAACd,GACL,GAAmB,MAAfA,EAAIe,OACN,OAAOf,EAAIgB,OAEXX,aAAaY,WAAW,gBAExBtB,OAGHmB,MAAK,SAACI,IACL,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMC,SACRlB,QAAQC,IAAIgB,GACZrC,EAAUuC,EAAaF,EAAKC,YAtBlCxB,KAiCEa,EAAqB,WACzBhB,OAAOC,KAAKU,OAAOkB,SAASzC,OACzB0C,KAAK,CACJC,WAAY,UAEZC,aAAa,EACbC,cAAc,IAIfX,MAAK,SAAUY,GACd,IAAI9C,EAAS8C,EAASC,OAAOR,MAE7BlB,QAAQC,IAAItB,GAERA,EAAOgD,OAAS,GAClB/C,EAAUuC,EAAaxC,QAKzBwC,EAAe,SAACE,GACpB,OAAOA,EAAKO,KAAI,SAACC,GAAD,MAAW,CACzBC,MAAOD,EAAKE,QACZC,MAAOH,EAAKG,MAAMC,UAAYJ,EAAKG,MAAME,KACzCC,IAAKN,EAAKM,IAAIF,UAAYJ,EAAKM,IAAID,UAyCvC,OACE,qCACE,wBAAQE,QAvCK,WACf,GAAI7C,OAAOC,KAAKU,QAAUE,aAAaK,QAAQ,gBAAiB,CAClD,IAAI4B,KAEhB3B,MAAM,uEAAD,OACoElC,EADpE,oBACuF,IAAI6D,KAC5F,gBACAC,cAHC,oBAGwB,IAAID,KAAK,gBAAgBC,eACpD,CACE3B,QAAS,CACPC,cAAc,UAAD,OAAYR,aAAaK,QAAQ,oBAIjDI,MAAK,SAACd,GAAD,OAASA,EAAIgB,UAClBF,MAAK,SAACI,GAAD,OAAUjB,QAAQC,IAAIgB,MAC5BP,MAAM,uEAAD,OACoElC,GACvE,CACE+D,OAAQ,OACR5B,QAAS,CACPC,cAAc,UAAD,OAAYR,aAAaK,QAAQ,kBAEhDrB,KAAMoD,KAAKC,UAAU,CACnBN,IAAK,CACHF,SAAU,IAAII,KAAK,iBAErBL,MAAO,CACLC,SAAU,IAAII,KAAK,iBAErBN,QAAS,aASjB,uBACA,cAAC,IAAD,CACEW,QAAS,CAACC,KACVC,YAAY,eACZjE,OAAQA,QCjKDkE,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlE,SAASmE,eAAe,W","file":"static/js/main.3569e995.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nconst CLIENT_ID =\n  \"229181458743-7e5rj587bq9qsjr7e7c5ut4kktgunpgt.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyAXTTATGaeYvWKHSiuLd7ucqmHeMxUoX3g\";\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nconst SCOPES =\n  \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\nconst GoogleCalendar = () => {\n  const [events, setEvents] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    document.body.appendChild(script);\n\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad();\n    });\n  }, []);\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize(\n      { client_id: CLIENT_ID, scope: SCOPES },\n      (res) => {\n        console.log(res);\n        if (res) {\n          console.log(window.gapi.client, res);\n\n          if (res.access_token)\n            localStorage.setItem(\"access_token\", res.access_token);\n\n          // fetch(\n          //   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n          // )\n          //   .then((res) => res.json())\n          //   .then((data) =>\n          //     localStorage.setItem(\"calendarId\", data.items[0].id)\n          //   );\n\n          window.gapi.client.load(\"calendar\", \"v3\", listUpcomingEvents);\n        }\n      }\n    );\n  };\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient);\n  };\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup();\n    } else {\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => {\n          if (res.status !== 401) {\n            return res.json();\n          } else {\n            localStorage.removeItem(\"access_token\");\n\n            openSignInPopup();\n          }\n        })\n        .then((data) => {\n          if (data?.items) {\n            console.log(data);\n            setEvents(formatEvents(data.items));\n          }\n        });\n    }\n  };\n\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events\n      .list({\n        calendarId: \"primary\",\n        // timeMin: new Date().toISOString(),\n        showDeleted: true,\n        singleEvents: true,\n        // maxResults: 10,\n        // orderBy: \"startTime\",\n      })\n      .then(function (response) {\n        var events = response.result.items;\n\n        console.log(events);\n\n        if (events.length > 0) {\n          setEvents(formatEvents(events));\n        }\n      });\n  };\n\n  const formatEvents = (list) => {\n    return list.map((item) => ({\n      title: item.summary,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date,\n    }));\n  };\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      let today = new Date();\n\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n          \"Apr 14, 2021\"\n        ).toISOString()}&timeMin=${new Date(\"Apr 15, 2021\").toISOString()}`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => console.log(data));\n        fetch(\n          `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n            },\n            body: JSON.stringify({\n              end: {\n                dateTime: new Date(\"Apr 16, 2021\"),\n              },\n              start: {\n                dateTime: new Date(\"Apr 15, 2021\"),\n              },\n              summary: \"Test\",\n            }),\n          }\n        );\n    }\n  };\n\n  return (\n    <>\n      <button onClick={addEvent}>Add event</button>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n      />\n    </>\n  );\n};\n\nexport default GoogleCalendar;\n","import \"./App.css\";\nimport GoogleCalendar from \"./components/GoogleCalendar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GoogleCalendar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}