{"ast":null,"code":"var _jsxFileName = \"/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"800666244265-0e5gv7a51masmufr3h95tgo1tq0dpgd7.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyD8-KtU-ntd30WGLrLjgxTHPcFI6uh3JiU\"; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nconst SCOPES = \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\nconst GoogleCalendar = () => {\n  _s();\n\n  const [events, setEvents] = useState(null);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad();\n    });\n  }, []);\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize({\n      client_id: CLIENT_ID,\n      scope: SCOPES\n    }, res => {\n      console.log(res);\n\n      if (res) {\n        console.log(window.gapi.client, res);\n        if (res.access_token) localStorage.setItem(\"access_token\", res.access_token); // fetch(\n        //   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n        // )\n        //   .then((res) => res.json())\n        //   .then((data) =>\n        //     localStorage.setItem(\"calendarId\", data.items[0].id)\n        //   );\n\n        window.gapi.client.load(\"calendar\", \"v3\", listUpcomingEvents);\n      }\n    });\n  };\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n\n\n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient);\n  };\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n\n\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup();\n    } else {\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        if (res.status !== 401) {\n          return res.json();\n        } else {\n          localStorage.removeItem(\"access_token\");\n          openSignInPopup();\n        }\n      }).then(data => {\n        if (data === null || data === void 0 ? void 0 : data.items) {\n          console.log(data);\n          setEvents(formatEvents(data.items));\n        }\n      });\n    }\n  };\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n\n\n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events.list({\n      calendarId: \"primary\",\n      // timeMin: new Date().toISOString(),\n      showDeleted: true,\n      singleEvents: true // maxResults: 10,\n      // orderBy: \"startTime\",\n\n    }).then(function (response) {\n      var events = response.result.items;\n      console.log(events);\n\n      if (events.length > 0) {\n        setEvents(formatEvents(events));\n      }\n    });\n  };\n\n  const formatEvents = list => {\n    return list.map(item => ({\n      title: item.summary,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date\n    }));\n  };\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      let today = new Date();\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\"Apr 14, 2021\").toISOString()}&timeMin=${new Date(\"Apr 15, 2021\").toISOString()}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => res.json()).then(data => console.log(data));\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify({\n          end: {\n            dateTime: new Date(\"Apr 16, 2021\")\n          },\n          start: {\n            dateTime: new Date(\"Apr 15, 2021\")\n          },\n          summary: \"Test\"\n        })\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEvent,\n      children: \"Add event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GoogleCalendar, \"xl92kQS5BieEcVRXPNFPepqRmHw=\");\n\n_c = GoogleCalendar;\nexport default GoogleCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleCalendar\");","map":{"version":3,"sources":["/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","CLIENT_ID","API_KEY","SCOPES","GoogleCalendar","events","setEvents","script","document","createElement","async","defer","src","body","appendChild","addEventListener","window","gapi","handleClientLoad","openSignInPopup","auth2","authorize","client_id","scope","res","console","log","client","access_token","localStorage","setItem","load","listUpcomingEvents","initClient","getItem","fetch","headers","Authorization","then","status","json","removeItem","data","items","formatEvents","calendar","list","calendarId","showDeleted","singleEvents","response","result","length","map","item","title","summary","start","dateTime","date","end","addEvent","today","Date","toISOString","method","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nconst CLIENT_ID =\n  \"800666244265-0e5gv7a51masmufr3h95tgo1tq0dpgd7.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyD8-KtU-ntd30WGLrLjgxTHPcFI6uh3JiU\";\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nconst SCOPES =\n  \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\nconst GoogleCalendar = () => {\n  const [events, setEvents] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    document.body.appendChild(script);\n\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad();\n    });\n  }, []);\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize(\n      { client_id: CLIENT_ID, scope: SCOPES },\n      (res) => {\n        console.log(res);\n        if (res) {\n          console.log(window.gapi.client, res);\n\n          if (res.access_token)\n            localStorage.setItem(\"access_token\", res.access_token);\n\n          // fetch(\n          //   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n          // )\n          //   .then((res) => res.json())\n          //   .then((data) =>\n          //     localStorage.setItem(\"calendarId\", data.items[0].id)\n          //   );\n\n          window.gapi.client.load(\"calendar\", \"v3\", listUpcomingEvents);\n        }\n      }\n    );\n  };\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient);\n  };\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup();\n    } else {\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => {\n          if (res.status !== 401) {\n            return res.json();\n          } else {\n            localStorage.removeItem(\"access_token\");\n\n            openSignInPopup();\n          }\n        })\n        .then((data) => {\n          if (data?.items) {\n            console.log(data);\n            setEvents(formatEvents(data.items));\n          }\n        });\n    }\n  };\n\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events\n      .list({\n        calendarId: \"primary\",\n        // timeMin: new Date().toISOString(),\n        showDeleted: true,\n        singleEvents: true,\n        // maxResults: 10,\n        // orderBy: \"startTime\",\n      })\n      .then(function (response) {\n        var events = response.result.items;\n\n        console.log(events);\n\n        if (events.length > 0) {\n          setEvents(formatEvents(events));\n        }\n      });\n  };\n\n  const formatEvents = (list) => {\n    return list.map((item) => ({\n      title: item.summary,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date,\n    }));\n  };\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      let today = new Date();\n\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n          \"Apr 14, 2021\"\n        ).toISOString()}&timeMin=${new Date(\"Apr 15, 2021\").toISOString()}`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => console.log(data));\n        fetch(\n          `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n            },\n            body: JSON.stringify({\n              end: {\n                dateTime: new Date(\"Apr 16, 2021\"),\n              },\n              start: {\n                dateTime: new Date(\"Apr 15, 2021\"),\n              },\n              summary: \"Test\",\n            }),\n          }\n        );\n    }\n  };\n\n  return (\n    <>\n      <button onClick={addEvent}>Add event</button>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n      />\n    </>\n  );\n};\n\nexport default GoogleCalendar;\n"]},"metadata":{},"sourceType":"module"}