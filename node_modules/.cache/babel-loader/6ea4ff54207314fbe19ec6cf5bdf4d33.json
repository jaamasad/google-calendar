{"ast":null,"code":"var _jsxFileName = \"/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\nimport $ from 'jquery';\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"592443710560-.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyABMZUitJ-kKdMQg5u-gg5RcBRjeNrv4tU\";\nconst SCOPES = \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\nconst GoogleCalendar = () => {\n  _s();\n\n  const [login, setLogin] = useState([]);\n  const [events, setEvents] = useState(null);\n  const [eventTitle, setEventTitle] = useState(null);\n  const [eventDesc, setEventDesc] = useState(null);\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    var calendarid = 'jamkhawar03027867415s@gmail.com';\n    $.ajax({\n      type: 'GET',\n      url: encodeURI('https://www.googleapis.com/calendar/v3/calendars/' + calendarid + '/events?key=' + API_KEY),\n      dataType: 'json',\n      success: function (response) {\n        setEvents(formatEvents(response.items));\n        console.log(events);\n      },\n      error: function (response) {}\n    });\n  });\n\n  const signin = () => {\n    setLogin(true);\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad();\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"access_token\");\n    setLogin(false);\n  };\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize({\n      client_id: CLIENT_ID,\n      scope: SCOPES\n    }, res => {\n      console.log(res);\n\n      if (res) {\n        console.log(window.gapi.client, res);\n        if (res.access_token) localStorage.setItem(\"access_token\", res.access_token);\n        fetch(`https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`).then(res => res.json()).then(data => localStorage.setItem(\"calendarId\", data.items[0].id));\n      }\n    });\n  };\n\n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient);\n  };\n\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup();\n    } else {\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        if (res.status !== 401) {\n          return res.json();\n        } else {\n          localStorage.removeItem(\"access_token\");\n          openSignInPopup();\n        }\n      }).then(data => {\n        if (data === null || data === void 0 ? void 0 : data.items) {\n          setEvents(formatEvents(data.items));\n        }\n      });\n    }\n  };\n\n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events.list({\n      calendarId: \"primary\",\n      showDeleted: true,\n      singleEvents: true\n    }).then(function (response) {\n      var events = response.result.items;\n\n      if (events.length > 0) {\n        setEvents(formatEvents(events));\n      }\n    });\n  };\n\n  const formatEvents = list => {\n    return list.map(item => ({\n      title: item.summary,\n      disc: item.description,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date\n    }));\n  };\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      let today = new Date();\n      var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // let dateStr = prompt('Enter a start date ');\n\n      var dateStr = prompt(\"Please enter date.\", today.getDate() + \"-\" + monthNames[today.getMonth()] + \"-\" + today.getFullYear());\n      let dateEnd = prompt(\"Enter a end date\");\n      let title = prompt(\"Enter title\");\n      let description = prompt(\"Enter disc\");\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\"Apr 01, 2021\").toISOString()}&timeMin=${new Date(\"Apr 01, 2021\").toISOString()}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => res.json()).then(data => console.log(data));\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify({\n          end: {\n            dateTime: new Date(dateEnd)\n          },\n          start: {\n            dateTime: new Date(dateStr)\n          },\n          summary: title,\n          description: description\n        })\n      });\n    }\n  };\n\n  const handelCancel = () => {\n    setModal(false);\n  };\n\n  const handleEventClick = ({\n    event,\n    el\n  }) => {\n    setModal(true);\n    setEventTitle(event._def.title);\n    setEventDesc(event._def.extendedProps.disc);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calander-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [login && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEvent,\n        children: \"Add event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), !login ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signin,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), console.log(events), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, googleCalendarPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      GoogleCalendarApikey: API_KEY,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      className: \"Eventmodel\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handelCancel,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }, this), eventTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 42\n            }, this), eventDesc ? eventDesc : \"this event has no summary\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleCalendar, \"QHztSn7/IQoRhlq0WauhTgnrhWA=\");\n\n_c = GoogleCalendar;\nexport default GoogleCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleCalendar\");","map":{"version":3,"sources":["/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","googleCalendarPlugin","$","Button","Modal","ModalHeader","ModalBody","CLIENT_ID","API_KEY","SCOPES","GoogleCalendar","login","setLogin","events","setEvents","eventTitle","setEventTitle","eventDesc","setEventDesc","modal","setModal","calendarid","ajax","type","url","encodeURI","dataType","success","response","formatEvents","items","console","log","error","signin","script","document","createElement","async","defer","src","body","appendChild","addEventListener","window","gapi","handleClientLoad","logout","localStorage","removeItem","openSignInPopup","auth2","authorize","client_id","scope","res","client","access_token","setItem","fetch","then","json","data","id","load","initClient","getItem","headers","Authorization","status","listUpcomingEvents","calendar","list","calendarId","showDeleted","singleEvents","result","length","map","item","title","summary","disc","description","start","dateTime","date","end","addEvent","today","Date","monthNames","dateStr","prompt","getDate","getMonth","getFullYear","dateEnd","toISOString","method","JSON","stringify","handelCancel","handleEventClick","event","el","_def","extendedProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\nimport $ from 'jquery'\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\"\nconst CLIENT_ID =\n  \"592443710560-.apps.googleusercontent.com\"\nconst API_KEY = \"AIzaSyABMZUitJ-kKdMQg5u-gg5RcBRjeNrv4tU\"\nconst SCOPES =\n  \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\"\n\nconst GoogleCalendar = () => {\n  const [login, setLogin] = useState([])\n  const [events, setEvents] = useState(null)\n  const [eventTitle, setEventTitle] = useState(null)\n  const [eventDesc, setEventDesc] = useState(null)\n  const [modal, setModal] = useState(false)\n\n  useEffect(() => {\n    var calendarid = 'jamkhawar03027867415s@gmail.com'; \n    \n    $.ajax({\n        type: 'GET',\n        url: encodeURI('https://www.googleapis.com/calendar/v3/calendars/' + calendarid+ '/events?key=' + API_KEY),\n        dataType: 'json',\n        success: function (response) {\n          setEvents(formatEvents(response.items))   \n          console.log(events)\n        },\n          \n        error: function (response) {\n\n        }\n    });    \n  })\n\n  const signin = () => {\n    setLogin(true)\n    const script = document.createElement(\"script\")\n    script.async = true\n    script.defer = true\n    script.src = \"https://apis.google.com/js/api.js\"\n\n    document.body.appendChild(script)\n\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad()\n    })\n  }\n\n  const logout=()=> {\n    localStorage.removeItem(\"access_token\")\n    setLogin(false)\n  }\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize(\n      { client_id: CLIENT_ID, scope: SCOPES },\n      (res) => {\n        console.log(res)\n        if (res) {\n          console.log(window.gapi.client, res)\n\n          if (res.access_token)\n            localStorage.setItem(\"access_token\", res.access_token)\n          fetch(\n            `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n          )\n            .then((res) => res.json())\n            .then((data) =>\n              localStorage.setItem(\"calendarId\", data.items[0].id)\n            )\n        }\n      }\n    )\n  }\n  \n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient)\n  }\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup()\n    } else {\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => {\n          if (res.status !== 401) {\n            return res.json()\n          } else {\n            localStorage.removeItem(\"access_token\")\n\n            openSignInPopup()\n          }\n        })\n        .then((data) => {\n          if (data?.items) {\n            setEvents(formatEvents(data.items))\n          }\n        })\n    }\n  }\n  \n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events\n      .list({\n        calendarId: \"primary\",\n        showDeleted: true,\n        singleEvents: true,\n      })\n      .then(function (response) {\n        var events = response.result.items\n        if (events.length > 0) {\n          setEvents(formatEvents(events))\n        }\n      })\n  }\n\n  const formatEvents = (list) => {\n    return list.map((item) => ({\n      title: item.summary,\n      disc: item.description,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date,\n    }))\n  }\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      let today = new Date()\n      var monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ]\n      // let dateStr = prompt('Enter a start date ');\n      var dateStr = prompt(\n        \"Please enter date.\",\n        today.getDate() +\n          \"-\" +\n          monthNames[today.getMonth()] +\n          \"-\" +\n          today.getFullYear()\n      )\n      let dateEnd = prompt(\"Enter a end date\")\n      let title = prompt(\"Enter title\")\n      let description = prompt(\"Enter disc\")\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n          \"Apr 01, 2021\"\n        ).toISOString()}&timeMin=${new Date(\"Apr 01, 2021\").toISOString()}`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => console.log(data))\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n          body: JSON.stringify({\n            end: {\n              dateTime: new Date(dateEnd),\n            },\n            start: {\n              dateTime: new Date(dateStr),\n            },\n            summary: title,\n            description: description,\n          }),\n        }\n      )\n    }\n  }\n\n  const handelCancel = () => {\n    setModal(false)\n  }\n\n  const handleEventClick = ({ event, el }) => {\n    setModal(true)\n    setEventTitle(event._def.title)\n    setEventDesc(event._def.extendedProps.disc)\n  }\n\n  return (\n    <div className=\"calander-container\">\n      <div className=\"button-container\">\n      {login && <button onClick={addEvent}>Add event</button>}\n      {!login ? <button onClick={signin}>Sign In</button>:\n       <button onClick={logout}>Logout</button>}\n      </div>\n      {console.log(events)}\n      <FullCalendar\n        plugins={[dayGridPlugin, googleCalendarPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        GoogleCalendarApikey={API_KEY}\n        eventClick={handleEventClick}\n      />\n      <Modal\n        isOpen={modal}\n        className=\"Eventmodel\"\n      >\n        <Button color=\"secondary\" onClick={handelCancel}>\n              X\n            </Button>\n            <ModalHeader>\n           <label>Title:</label><br />\n            {eventTitle}\n          </ModalHeader>\n          <ModalBody>\n            <div>\n              <p>\n              <label>Description:</label><br />  \n\n              {eventDesc ? eventDesc :\"this event has no summary\"}\n              </p>\n            </div>\n          </ModalBody>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GoogleCalendar\n"]},"metadata":{},"sourceType":"module"}