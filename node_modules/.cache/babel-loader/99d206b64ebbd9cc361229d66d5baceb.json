{"ast":null,"code":"import _slicedToArray from\"/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import FullCalendar from\"@fullcalendar/react\";import dayGridPlugin from\"@fullcalendar/daygrid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CLIENT_ID=\"229181458743-7e5rj587bq9qsjr7e7c5ut4kktgunpgt.apps.googleusercontent.com\";var API_KEY=\"AIzaSyAXTTATGaeYvWKHSiuLd7ucqmHeMxUoX3g\";// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES=\"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";var GoogleCalendar=function GoogleCalendar(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),events=_useState2[0],setEvents=_useState2[1];useEffect(function(){var script=document.createElement(\"script\");script.async=true;script.defer=true;script.src=\"https://apis.google.com/js/api.js\";document.body.appendChild(script);script.addEventListener(\"load\",function(){if(window.gapi)handleClientLoad();});},[]);var openSignInPopup=function openSignInPopup(){window.gapi.auth2.authorize({client_id:CLIENT_ID,scope:SCOPES},function(res){console.log(res);if(res){console.log(window.gapi.client,res);if(res.access_token)localStorage.setItem(\"access_token\",res.access_token);// fetch(\n//   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n// )\n//   .then((res) => res.json())\n//   .then((data) =>\n//     localStorage.setItem(\"calendarId\", data.items[0].id)\n//   );\nwindow.gapi.client.load(\"calendar\",\"v3\",listUpcomingEvents);}});};/**\n   *  On load, called to load the auth2 library and API client library.\n   */var handleClientLoad=function handleClientLoad(){window.gapi.load(\"client:auth2\",initClient);};/**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */var initClient=function initClient(){if(!localStorage.getItem(\"access_token\")){openSignInPopup();}else{fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events?key=\".concat(API_KEY,\"&orderBy=startTime&singleEvents=true\"),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"access_token\"))}}).then(function(res){if(res.status!==401){return res.json();}else{localStorage.removeItem(\"access_token\");openSignInPopup();}}).then(function(data){if(data===null||data===void 0?void 0:data.items){console.log(data);setEvents(formatEvents(data.items));}});}};/**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */var listUpcomingEvents=function listUpcomingEvents(){window.gapi.client.calendar.events.list({calendarId:\"primary\",// timeMin: new Date().toISOString(),\nshowDeleted:true,singleEvents:true// maxResults: 10,\n// orderBy: \"startTime\",\n}).then(function(response){var events=response.result.items;console.log(events);if(events.length>0){setEvents(formatEvents(events));}});};var formatEvents=function formatEvents(list){return list.map(function(item){return{title:item.summary,start:item.start.dateTime||item.start.date,end:item.end.dateTime||item.end.date};});};var addEvent=function addEvent(){if(window.gapi.client||localStorage.getItem(\"access_token\")){var today=new Date();fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events?key=\".concat(API_KEY,\"&timeMax=\").concat(new Date(\"Apr 14, 2021\").toISOString(),\"&timeMin=\").concat(new Date(\"Apr 15, 2021\").toISOString()),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"access_token\"))}}).then(function(res){return res.json();}).then(function(data){return console.log(data);});fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events?key=\".concat(API_KEY),{method:\"POST\",headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"access_token\"))},body:JSON.stringify({end:{dateTime:new Date(\"Apr 16, 2021\")},start:{dateTime:new Date(\"Apr 15, 2021\")},summary:\"Test\"})});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:addEvent,children:\"Add event\"}),/*#__PURE__*/_jsx(FullCalendar,{plugins:[dayGridPlugin],initialView:\"dayGridMonth\",events:events})]});};export default GoogleCalendar;","map":{"version":3,"sources":["/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","CLIENT_ID","API_KEY","SCOPES","GoogleCalendar","events","setEvents","script","document","createElement","async","defer","src","body","appendChild","addEventListener","window","gapi","handleClientLoad","openSignInPopup","auth2","authorize","client_id","scope","res","console","log","client","access_token","localStorage","setItem","load","listUpcomingEvents","initClient","getItem","fetch","headers","Authorization","then","status","json","removeItem","data","items","formatEvents","calendar","list","calendarId","showDeleted","singleEvents","response","result","length","map","item","title","summary","start","dateTime","date","end","addEvent","today","Date","toISOString","method","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nconst CLIENT_ID =\n  \"229181458743-7e5rj587bq9qsjr7e7c5ut4kktgunpgt.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyAXTTATGaeYvWKHSiuLd7ucqmHeMxUoX3g\";\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nconst SCOPES =\n  \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\nconst GoogleCalendar = () => {\n  const [events, setEvents] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    document.body.appendChild(script);\n\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad();\n    });\n  }, []);\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize(\n      { client_id: CLIENT_ID, scope: SCOPES },\n      (res) => {\n        console.log(res);\n        if (res) {\n          console.log(window.gapi.client, res);\n\n          if (res.access_token)\n            localStorage.setItem(\"access_token\", res.access_token);\n\n          // fetch(\n          //   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n          // )\n          //   .then((res) => res.json())\n          //   .then((data) =>\n          //     localStorage.setItem(\"calendarId\", data.items[0].id)\n          //   );\n\n          window.gapi.client.load(\"calendar\", \"v3\", listUpcomingEvents);\n        }\n      }\n    );\n  };\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient);\n  };\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup();\n    } else {\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => {\n          if (res.status !== 401) {\n            return res.json();\n          } else {\n            localStorage.removeItem(\"access_token\");\n\n            openSignInPopup();\n          }\n        })\n        .then((data) => {\n          if (data?.items) {\n            console.log(data);\n            setEvents(formatEvents(data.items));\n          }\n        });\n    }\n  };\n\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events\n      .list({\n        calendarId: \"primary\",\n        // timeMin: new Date().toISOString(),\n        showDeleted: true,\n        singleEvents: true,\n        // maxResults: 10,\n        // orderBy: \"startTime\",\n      })\n      .then(function (response) {\n        var events = response.result.items;\n\n        console.log(events);\n\n        if (events.length > 0) {\n          setEvents(formatEvents(events));\n        }\n      });\n  };\n\n  const formatEvents = (list) => {\n    return list.map((item) => ({\n      title: item.summary,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date,\n    }));\n  };\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      let today = new Date();\n\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n          \"Apr 14, 2021\"\n        ).toISOString()}&timeMin=${new Date(\"Apr 15, 2021\").toISOString()}`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => console.log(data));\n        fetch(\n          `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n          {\n            method: \"POST\",\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n            },\n            body: JSON.stringify({\n              end: {\n                dateTime: new Date(\"Apr 16, 2021\"),\n              },\n              start: {\n                dateTime: new Date(\"Apr 15, 2021\"),\n              },\n              summary: \"Test\",\n            }),\n          }\n        );\n    }\n  };\n\n  return (\n    <>\n      <button onClick={addEvent}>Add event</button>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n      />\n    </>\n  );\n};\n\nexport default GoogleCalendar;\n"]},"metadata":{},"sourceType":"module"}