{"ast":null,"code":"var _jsxFileName = \"/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\nimport $ from 'jquery';\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"592443710560-iv53i6i8n8q1q9v53tat6qg4dmps3knp.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyABMZUitJ-kKdMQg5u-gg5RcBRjeNrv4tU\";\nconst SCOPES = \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\nconst GoogleCalendar = () => {\n  _s();\n\n  const [login, setLogin] = useState(false);\n  const [events, setEvents] = useState(null);\n  const [eventTitle, setEventTitle] = useState(null);\n  const [eventDesc, setEventDesc] = useState(null);\n  const [modal, setModal] = useState(false);\n  const [addEventModal, setAddEventModal] = useState(false);\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: ''\n  });\n\n  const handleEventChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEvent({ ...newEvent,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"access_token\")) setLogin(true);\n    var calendarid = 'jamkhawar03027867415@gmail.com';\n    $.ajax({\n      type: 'GET',\n      url: encodeURI('https://www.googleapis.com/calendar/v3/calendars/' + calendarid + '/events?key=' + API_KEY),\n      dataType: 'json',\n      success: function (response) {\n        setEvents(formatEvents(response.items)); // console.log(events)\n      },\n      error: function (response) {}\n    });\n  });\n\n  const signin = () => {\n    setLogin(true);\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad();\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"access_token\");\n    setLogin(false);\n  };\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize({\n      client_id: CLIENT_ID,\n      scope: SCOPES\n    }, res => {\n      if (res) {\n        console.log(window.gapi.client, res);\n        if (res.access_token) localStorage.setItem(\"access_token\", res.access_token);\n        fetch(`https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`).then(res => res.json()).then(data => localStorage.setItem(\"calendarId\", data.items[0].id));\n      }\n    });\n  };\n\n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient);\n  };\n\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup();\n    } else {\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => {\n        if (res.status !== 401) {\n          return res.json();\n        } else {\n          localStorage.removeItem(\"access_token\");\n          openSignInPopup();\n        }\n      }).then(data => {\n        if (data === null || data === void 0 ? void 0 : data.items) {\n          setEvents(formatEvents(data.items));\n        }\n      });\n    }\n  };\n\n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events.list({\n      calendarId: \"primary\",\n      showDeleted: true,\n      singleEvents: true\n    }).then(function (response) {\n      var events = response.result.items;\n\n      if (events.length > 0) {\n        setEvents(formatEvents(events));\n      }\n    });\n  };\n\n  const formatEvents = list => {\n    return list.map(item => ({\n      title: item.summary,\n      disc: item.description,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date\n    }));\n  };\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\"Apr 01, 2021\").toISOString()}&timeMin=${new Date(\"Apr 01, 2021\").toISOString()}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        }\n      }).then(res => res.json()).then(data => console.log(data));\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify({\n          end: {\n            dateTime: new Date(newEvent.endDate)\n          },\n          start: {\n            dateTime: new Date(newEvent.startDate)\n          },\n          summary: newEvent.title,\n          description: newEvent.description\n        })\n      });\n      setModal(false);\n    }\n  };\n\n  const handelCancel = () => {\n    setModal(false);\n  };\n\n  const handleEventClick = ({\n    event,\n    el\n  }) => {\n    setModal(true);\n    setEventTitle(event._def.title);\n    setEventDesc(event._def.extendedProps.disc);\n  };\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  const handleCapacity = e => {\n    setSelect(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calander-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [login && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAddEventModal(true),\n        children: \"Add event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), !login ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signin,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, googleCalendarPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      GoogleCalendarApikey: API_KEY,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      onRequestClose: toggleModal,\n      contentLabel: \"My dialog\",\n      className: \"mymodal\",\n      overlayClassName: \"myoverlay\",\n      closeTimeoutMS: 500,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: newEvent.title,\n          onChange: handleEventChange,\n          placeholder: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: newEvent.description,\n          placeholder: \"Enter Descrition\",\n          onChange: handleEventChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Enter Start Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"startDate\",\n          value: newEvent.startDate,\n          placeholder: \"start date\",\n          onChange: handleEventChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Enter End Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"endDate\",\n          value: newEvent.endDate,\n          placeholder: \"end date\",\n          onChange: handleEventChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEvent,\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleCalendar, \"0h18Iku78UOjqmefySYdei/kz4g=\");\n\n_c = GoogleCalendar;\nexport default GoogleCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleCalendar\");","map":{"version":3,"sources":["/media/jaam/E8BE2D48BE2D109C/my project/google-calendar/src/components/GoogleCalendar.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","googleCalendarPlugin","$","Modal","CLIENT_ID","API_KEY","SCOPES","GoogleCalendar","login","setLogin","events","setEvents","eventTitle","setEventTitle","eventDesc","setEventDesc","modal","setModal","addEventModal","setAddEventModal","newEvent","setNewEvent","title","description","startDate","endDate","handleEventChange","e","name","value","target","localStorage","getItem","calendarid","ajax","type","url","encodeURI","dataType","success","response","formatEvents","items","error","signin","script","document","createElement","async","defer","src","body","appendChild","addEventListener","window","gapi","handleClientLoad","logout","removeItem","openSignInPopup","auth2","authorize","client_id","scope","res","console","log","client","access_token","setItem","fetch","then","json","data","id","load","initClient","headers","Authorization","status","listUpcomingEvents","calendar","list","calendarId","showDeleted","singleEvents","result","length","map","item","summary","disc","start","dateTime","date","end","addEvent","Date","toISOString","method","JSON","stringify","handelCancel","handleEventClick","event","el","_def","extendedProps","toggleModal","handleCapacity","setSelect"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\nimport $ from 'jquery'\nimport Modal from \"react-modal\"\nconst CLIENT_ID =\n  \"592443710560-iv53i6i8n8q1q9v53tat6qg4dmps3knp.apps.googleusercontent.com\"\nconst API_KEY = \"AIzaSyABMZUitJ-kKdMQg5u-gg5RcBRjeNrv4tU\"\nconst SCOPES =\n  \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\"\n\nconst GoogleCalendar = () => {\n  const [login, setLogin] = useState(false)\n  const [events, setEvents] = useState(null)\n  const [eventTitle, setEventTitle] = useState(null)\n  const [eventDesc, setEventDesc] = useState(null)\n  const [modal, setModal] = useState(false)\n  const [addEventModal, setAddEventModal] = useState(false)\n  const [newEvent, setNewEvent] = useState({\n    title:'',\n    description:'',\n    startDate:'',\n    endDate:''\n  })\n\n  const handleEventChange=(e)=>{\n    const {name, value} = e.target\n    setNewEvent({\n      ...newEvent,\n      [name]:value\n    })\n  }\n\n  useEffect(() => {\n    if(localStorage.getItem(\"access_token\"))setLogin(true)\n    var calendarid = 'jamkhawar03027867415@gmail.com'; \n    \n    $.ajax({\n        type: 'GET',\n        url: encodeURI('https://www.googleapis.com/calendar/v3/calendars/' + calendarid+ '/events?key=' + API_KEY),\n        dataType: 'json',\n        success: function (response) {\n          setEvents(formatEvents(response.items))   \n          // console.log(events)\n        },\n          \n        error: function (response) {\n\n        }\n    });    \n  })\n\n  const signin = () => {\n    setLogin(true)\n    const script = document.createElement(\"script\")\n    script.async = true\n    script.defer = true\n    script.src = \"https://apis.google.com/js/api.js\"\n\n    document.body.appendChild(script)\n\n    script.addEventListener(\"load\", () => {\n      if (window.gapi) handleClientLoad()\n    })\n  }\n\n  const logout=()=> {\n    localStorage.removeItem(\"access_token\")\n    setLogin(false)\n  }\n\n  const openSignInPopup = () => {\n    window.gapi.auth2.authorize(\n      { client_id: CLIENT_ID, scope: SCOPES },\n      (res) => {\n        if (res) {\n          console.log(window.gapi.client, res)\n\n          if (res.access_token)\n            localStorage.setItem(\"access_token\", res.access_token)\n          fetch(\n            `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n          )\n            .then((res) => res.json())\n            .then((data) =>\n              localStorage.setItem(\"calendarId\", data.items[0].id)\n            )\n        }\n      }\n    )\n  }\n  \n  const handleClientLoad = () => {\n    window.gapi.load(\"client:auth2\", initClient)\n  }\n  const initClient = () => {\n    if (!localStorage.getItem(\"access_token\")) {\n      openSignInPopup()\n    } else {\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => {\n          if (res.status !== 401) {\n            return res.json()\n          } else {\n            localStorage.removeItem(\"access_token\")\n\n            openSignInPopup()\n          }\n        })\n        .then((data) => {\n          if (data?.items) {\n            setEvents(formatEvents(data.items))\n          }\n        })\n    }\n  }\n  \n  const listUpcomingEvents = () => {\n    window.gapi.client.calendar.events\n      .list({\n        calendarId: \"primary\",\n        showDeleted: true,\n        singleEvents: true,\n      })\n      .then(function (response) {\n        var events = response.result.items\n        if (events.length > 0) {\n          setEvents(formatEvents(events))\n        }\n      })\n  }\n\n  const formatEvents = (list) => {\n    return list.map((item) => ({\n      title: item.summary,\n      disc: item.description,\n      start: item.start.dateTime || item.start.date,\n      end: item.end.dateTime || item.end.date,\n    }))\n  }\n\n  const addEvent = () => {\n    if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n          \"Apr 01, 2021\"\n        ).toISOString()}&timeMin=${new Date(\"Apr 01, 2021\").toISOString()}`,\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => console.log(data))\n      fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n          },\n          body: JSON.stringify({\n            end: {\n              dateTime: new Date(newEvent.endDate),\n            },\n            start: {\n              dateTime: new Date(newEvent.startDate),\n            },\n            summary: newEvent.title,\n            description: newEvent.description,\n          }),\n        }\n      )\n      setModal(false)\n\n    }\n  }\n\n  const handelCancel = () => {\n    setModal(false)\n  }\n\n  const handleEventClick = ({ event, el }) => {\n    setModal(true)\n    setEventTitle(event._def.title)\n    setEventDesc(event._def.extendedProps.disc)\n  }\n\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n\n  const handleCapacity = (e) => {\n    setSelect(e.target.value)\n  }\n\n  return (\n    <div className=\"calander-container\">\n      <div className=\"button-container\">\n      {login && <button onClick={()=>setAddEventModal(true)}>Add event</button>}\n      {!login ? <button onClick={signin}>Sign In</button>:\n       <button onClick={logout}>Logout</button>}\n      </div>\n      <FullCalendar\n        plugins={[dayGridPlugin, googleCalendarPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        GoogleCalendarApikey={API_KEY}\n        eventClick={handleEventClick}\n      />\n      {/* <Modal\n        isOpen={addEventModal}\n        className=\"Eventmodel\"\n      >\n        <Button color=\"secondary\" onClick={()=>setAddEventModal(false)}>\n              X\n            </Button>\n          <ModalBody>\n           <div>\n            <label>Title</label>\n            <input type=\"text\" name=\"title\" value={newEvent.title} onChange={handleEventChange} placeholder=\"Enter Title\" />\n            <label>Enter Description</label>\n            <input type=\"text\" name=\"description\" value={newEvent.description} placeholder=\"Enter Descrition\" onChange={handleEventChange} />\n             <label htmlFor=\"\">Enter Start Date</label>\n             <input type=\"date\" name=\"startDate\" value={newEvent.startDate} placeholder=\"start date\" onChange={handleEventChange}  />\n             <label htmlFor=\"\">Enter End Date</label>\n             <input type=\"date\" name=\"endDate\" value={newEvent.endDate} placeholder=\"end date\" onChange={handleEventChange}  />\n             <button onClick={addEvent}>Add Event</button>\n           </div>\n          </ModalBody>\n      </Modal> */}\n{/* \n      <Modal\n        isOpen={modal}\n        className=\"Eventmodel\"\n      >\n        <Button color=\"secondary\" onClick={handelCancel}>\n              X\n            </Button>\n            <ModalHeader>\n           <label>Title:</label><br />\n            {eventTitle}\n          </ModalHeader>\n          <ModalBody>\n            <div>\n              <p>\n              <label>Description:</label><br />  \n\n              {eventDesc ? eventDesc :\"this event has no summary\"}\n              </p>\n            </div>\n          </ModalBody>\n      </Modal> */}\n\n      <Modal\n        isOpen={modal}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"mymodal\"\n        overlayClassName=\"myoverlay\"\n        closeTimeoutMS={500}\n      >\n       <div>\n            <label>Title</label>\n            <input type=\"text\" name=\"title\" value={newEvent.title} onChange={handleEventChange} placeholder=\"Enter Title\" />\n            <label>Enter Description</label>\n            <input type=\"text\" name=\"description\" value={newEvent.description} placeholder=\"Enter Descrition\" onChange={handleEventChange} />\n             <label htmlFor=\"\">Enter Start Date</label>\n             <input type=\"date\" name=\"startDate\" value={newEvent.startDate} placeholder=\"start date\" onChange={handleEventChange}  />\n             <label htmlFor=\"\">Enter End Date</label>\n             <input type=\"date\" name=\"endDate\" value={newEvent.endDate} placeholder=\"end date\" onChange={handleEventChange}  />\n             <button onClick={addEvent}>Add Event</button>\n           </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default GoogleCalendar\n"]},"metadata":{},"sourceType":"module"}